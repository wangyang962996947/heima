package com.itheima.ssm.dao;import com.itheima.ssm.domain.Member;import com.itheima.ssm.domain.Orders;import com.itheima.ssm.domain.Product;import org.apache.ibatis.annotations.*;import java.util.List;/** * 完成调单持久化操作 */public interface IOrderDao {    @Select("SELECT * FROM ORDERS")    @Results({            @Result(id =true,property ="id",column = "id"),            @Result(property ="orderNum",column = "orderNum"),            @Result(property ="orderTime",column = "orderTime"),            @Result(property ="orderStatus",column = "orderStatus"),            @Result(property ="peopleCount",column = "peopleCount"),            @Result(property ="payType",column = "payType"),            @Result(property ="orderDesc",column = "orderDesc"),            @Result(property ="product",column = "productId",javaType = Product.class,                    one = @One(select = "com.itheima.ssm.dao.IProductDao.findById"))    })    List<Orders> findAll() throws Exception;    @Select("SELECT * FROM ORDERS WHERE ID = #{id}")    @Results({            @Result(id =true,property ="id",column = "id"),            @Result(property ="orderNum",column = "orderNum"),            @Result(property ="orderTime",column = "orderTime"),            @Result(property ="orderStatus",column = "orderStatus"),            @Result(property ="peopleCount",column = "peopleCount"),            @Result(property ="payType",column = "payType"),            @Result(property ="orderDesc",column = "orderDesc"),            @Result(property ="product",column = "productId",javaType = Product.class,                    one = @One(select = "com.itheima.ssm.dao.IProductDao.findById")),            @Result(property ="member",column = "memberId",javaType = Member.class,                    one = @One(select = "com.itheima.ssm.dao.IMemberDao.findById")),            @Result(property ="travellers",column = "id",many =            @Many(select = "com.itheima.ssm.dao.ITravellerDao.findByOrdersId"))    })    Orders findOrderById(String id) throws Exception;}
package com.itheima.ssm.controller;import java.lang.annotation.Annotation;import	java.lang.reflect.Method;import com.itheima.ssm.domain.SysLog;import com.itheima.ssm.service.ISysLogService;import org.aspectj.lang.JoinPoint;import org.aspectj.lang.annotation.After;import org.aspectj.lang.annotation.Aspect;import org.aspectj.lang.annotation.Before;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.context.SecurityContext;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.security.core.userdetails.User;import org.springframework.stereotype.Component;import org.springframework.web.bind.annotation.RequestMapping;import javax.servlet.http.HttpServletRequest;import java.util.Date;/** * * @auther wangyang * @date 2019/10/25 9:20 PM */@Component@Aspectpublic class LogAop {    //开始时间    private Date visitTime;    //访问类    private Class clazz;    //访问方法    private Method method;    @Autowired    private HttpServletRequest request;    @Autowired    private ISysLogService sysLogService;    /**     * 前置通知 获取开始时间 执行类 方法     * @param jp     */    @Before("execution(* com.itheima.ssm.controller.*.*(..))")    public void doBefore(JoinPoint jp) throws NoSuchMethodException {        //当前时间是开始访问时间        visitTime = new Date();        //具体访问类        clazz = jp.getTarget().getClass();        //获取访问的方法的名字        String methodName = jp.getSignature().getName();        //获取访问方法的参数        Object[] args= jp.getArgs();        //获取具体执行的方法的对象        if(args == null || args.length == 0){            //只能获取无参方法            method = clazz.getMethod(methodName);        }else {            Class[] classArgs = new Class [args.length];            for (int i = 0;i < args.length; i++){                classArgs[i] = args [i].getClass();            }            clazz.getMethod(methodName,classArgs);        }    }    /**     * 前置通知     * @param jp     */    @After("execution(* com.itheima.ssm.controller.*.*(..))")    public void doAfter(JoinPoint jp) throws Exception{        long time= new Date().getTime() - visitTime.getTime();        String url= "";        //获取URL        if(clazz != null && method != null && clazz != LogAop.class){            //获取类上的@RequestMapping("/permission")            RequestMapping clazzAnnotation = (RequestMapping) clazz.getAnnotation(RequestMapping                    .class);            if(clazzAnnotation != null){                String[] classValue = clazzAnnotation.value();                //获取方法上的value值                RequestMapping methodAnnotation = (RequestMapping)method.getAnnotation                        (RequestMapping.class);                if(methodAnnotation !=null){                    String[] methodValue = clazzAnnotation.value();                    url = classValue[0] + methodValue[0];                    //获取访问的IP地址                    String ip = request.getRemoteAddr();                    //获取当前操作用户                    //从上下文当中获取当前登录用户                    SecurityContext context = SecurityContextHolder.getContext();                    User user = (User) context.getAuthentication().getPrincipal();                    String userName= user.getUsername();                    //将日志相关信息放到SysLog                    SysLog sysLog = new SysLog();                    sysLog.setUsername(userName);                    sysLog.setUrl(url);                    sysLog.setIp(ip);                    sysLog.setExecutionTime(time);                    sysLog.setVisitTime(visitTime);                    sysLog.setMethod("[类名] "+clazz.getName()+"[方法名] "+method.getName());                    //插入日志                    sysLogService.save(sysLog);                }            }        }    }}